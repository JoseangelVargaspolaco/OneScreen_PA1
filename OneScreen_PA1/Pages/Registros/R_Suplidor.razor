@page "/_suplidor"

@page "/_suplidor/{SuplidorId:int}"

@* Registro de los clientes *@

@inject AuthenticationStateProvider Authentication

@inject IToastService Toast

@inject CategoriaBLL categoriaBLL

@inject SuplidorBLL suplidorBLL

<EditForm Model="_suplidor" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="rz-border-radius-4 shadow bg-white d-block p-2 border border-4"
        style="margin: auto; width: 800px; height: 570px;">
        <div class="rz-border-radius-4 shadow card-header text-center">
            <h3>Registro Suplidor <span class="oi oi-person"></span></h3>
        </div>

        <div class="rz-border-radius-4 shadow border border-4 card card-body" style="width: 780px; height: 400px;">
            <div class="container overflow-hidden">
                <form class="row gy-3">
                    <p />

                    @*...................... Codigo del suplidor ......................*@

                    <div class="form-group col-1" style="width: 170px; height: 80px;">
                        <label class="form-label">RNC</label>
                        <InputNumber @bind-Value="_suplidor.SuplidorId" placeholder="Codigo del suplidor"
                            class="rz-border-radius-2 shadow shadow form-control" />
                        <ValidationMessage For="@(() => _suplidor.SuplidorId)" />
                    </div>

                    @*...................... Nombre del suplidor ......................*@


                    <div class="form-group col-1" style="width: 270px; height: 80px;">
                        <label class="form-label">Nombre suplidor</label>
                        <InputText @bind-Value="_suplidor.NombreSuplidor" placeholder="Nombre del suplidor"
                            class="rz-border-radius-2 shadow shadow form-control" />
                        <ValidationMessage For="@(() => _suplidor.NombreSuplidor)" />
                    </div>
                    <br />

                    @*...................... Email ......................*@

                    <div class="form-group col-3" style="width: 280px; height: 80px;">
                        <label class="form-label">Email</label>
                        <InputText @bind-Value="_suplidor.Email" placeholder="Correro electronico"
                            class="rz-border-radius-2 shadow shadow form-control" />
                        <ValidationMessage For="@(() => _suplidor.Email)" />
                    </div>
                    <br />
                   
                    @*...................... Dirrección ......................*@

                    <div class="form-group col-3" style="width: 360px; height: 80px;">
                        <label class="form-label">Dirreción
                            <div class="oi oi-map-marker" />
                        </label>
                        <InputText @bind-Value="_suplidor.Dirección" placeholder="Dirección"
                            class="rz-border-radius-2 shadow shadow form-control" />
                        <ValidationMessage For="@(() => _suplidor.Dirección)" />
                    </div>

                    @*...................... Telefono ......................*@

                    <div class="form-group col-3" style="width: 200px; height: 80px;">
                        <label class="form-label">Numero teléfono</label>
                        <InputText @bind-Value="_suplidor.Telefono" placeholder="Numero teléfonico"
                            class="rz-border-radius-2 shadow shadow form-control" />
                        <ValidationMessage For="@(() => _suplidor.Telefono)" />
                    </div>

                    @*...................... Fecha de Ingreso ......................*@

                    <div class="form-group col-3" style="width: 170px; height: 80px;">
                        <label class="form-label">Fecha ingreso</label>
                        <InputDate @bind-Value="_suplidor.FechaIngreso" class="rz-border-radius-2 shadow shadow form-control" />
                        <ValidationMessage For="@(() => _suplidor.FechaIngreso)" />
                    </div>

                    @*...................... Consultar clientes ......................*@

                    <p/>
                    <p/>
                    <div class="form-group col-3" style="margin: auto;">
                        <a class="rz-border-radius-4 shadow border border-4 btn btn-lg btn btn-warning"
                            data-toggle="tooltip" data-placement="right" title="Ingresar a la consulta"
                            href="listas">Suplidores
                            <span class="oi oi-person">
                            </span>
                        </a>
                    </div>
                </form>
            </div>
        </div>

        @*...................... Botones ......................*@

        <div class="shadow border border-4 rz-border-radius-4 card-footer d-flex justify-content-center"
            style="width: 780px; height: 90px;">
            <div class="btn-group" role="group">
                <button type="button" style="width: 150px; height: 60px;"
                    class="rz-border-radius-4 shadow border border-4 btn btn-lg btn-primary" @onclick="Nuevo">
                    <span class="oi oi-file"> Nuevo</span>
                </button>

                <button type="submit" style="width: 150px; height: 60px;"
                    class="rz-border-radius-4 shadow border border-4 btn-lg btn-success">
                    <span class="oi oi-document"> Guardar</span>
                </button>

                <button type="button" style="width: 150px; height: 60px;"
                    class="rz-border-radius-4 shadow border border-4 btn btn-lg btn-danger" @onclick="Eliminar">
                    <span class="oi oi-trash"> Eliminar</span>
                </button>
            </div>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public int SuplidorId { get; set; }

    #nullable disable // Para quitar el aviso de nulls
    Suplidor _suplidor = new Suplidor();
    List<Categoria> CategoriaList  = new List<Categoria>();

    //-----------------------------------------------------------------------
    protected override void OnInitialized()
    {
        _suplidor = new Suplidor();

        _suplidor.SuplidorId = SuplidorId;
        Buscar();
    }

    public void Nuevo() // Nuevo cliente
    {
        _suplidor = new Suplidor();

    }

    public void Guardar() // Guardar cliente
    {
        var _suplidor = suplidorBLL.ExisteNombre(this._suplidor.NombreSuplidor);

        if (_suplidor == null) //si no existe lo guarda
        {

            if (suplidorBLL.Guardar(this._suplidor))
            {

                    Toast.ShowSuccess($"Suplidor: {this._suplidor.NombreSuplidor}, Guardado correctamente");
                this._suplidor = new Suplidor();
            }
            else
                    Toast.ShowError("No se pudo guardar");

        }
        else // si existe, no guarda porque esa cedula pertenece a otra persona
        {
            if (this._suplidor.Telefono == this._suplidor.Telefono.ToLower() && _suplidor.SuplidorId == this._suplidor.SuplidorId)
            {
                if (suplidorBLL.Guardar(this._suplidor))
                {

                    Toast.ShowSuccess($"Suplidor: {this._suplidor.Telefono}, Guardado correctamente");
                    this._suplidor = new Suplidor();
                }

                else
                    Toast.ShowError("No fue posible guardar");
            }
            else
            {
                    Toast.ShowError($"Telefono: {this._suplidor.Telefono}, pertenece a otro suplidor");
            }
        }
    }

    public void Buscar() // Buscar suplidor
    {
        if (this._suplidor.SuplidorId > 0)
        {
            var suplidor_ = suplidorBLL.Buscar(_suplidor.SuplidorId);

            if (suplidor_ != null)
            {
                suplidor_ = _suplidor;

                Toast.ShowSuccess($"Suplidor: {_suplidor.NombreSuplidor}, encontrado ");
            }
            else
            {
                Toast.ShowWarning($"No existe un cliente con este Id: {_suplidor.NombreSuplidor}");
            }
        }
    }

    public async Task Eliminar() // Eliminar suplidor
    {
        var eliminar = suplidorBLL.Buscar(_suplidor.SuplidorId);

        if (eliminar != null)
        {
            _suplidor = new Suplidor();
            CategoriaList = await categoriaBLL.GetList(c => true);
            Toast.ShowSuccess("Eliminado correctamente");
        }
        else
            Toast.ShowError("No fue posible eliminar");
    }
}